enum MealType {
    breakfast
    lunch
    dinner
    snack
}

model FoodItem {
    id            String             @id @default(cuid())
    barcode       String             @unique
    name          String             @unique
    servingSize   Float?
    calories      Float?
    proteins      Float?
    carbohydrates Float?
    sugars        Float?
    fat           Float?
    saturatedFat  Float?
    fiber         Float?
    salt          Float?
    cholesterol   Float?
    brandId       String?
    brand         FoodItemBrand?     @relation(fields: [brandId], references: [id], onDelete: SetNull)
    categories    FoodItemCategory[]
    labels        FoodItemLabel[]
    mealFoodItem  MealFoodItem[]
    userMealItem  UserMealItem[]
    images        FoodItemImg[]
    createdAt     DateTime           @default(now())
    updatedAt     DateTime           @updatedAt
}

model FoodItemLabel {
    id        String     @id @default(cuid())
    name      String     @unique
    foodItems FoodItem[]
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
}

model FoodItemImg {
    id         String   @id @default(cuid())
    url        String   @unique
    altText    String?  @default("Food Image")
    foodItemId String
    foodItem   FoodItem @relation(fields: [foodItemId], references: [id], onDelete: Cascade)
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model FoodItemBrand {
    id        String     @id @default(cuid())
    name      String     @unique
    foodItems FoodItem[]
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
}

model FoodItemCategory {
    id        String     @id @default(cuid())
    name      String     @unique
    foodItems FoodItem[]
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
}

model Meal {
    id            String         @id @default(cuid())
    name          String?
    mealType      MealType       @default(breakfast)
    ownerId       String?
    owner         User?          @relation(fields: [ownerId], references: [id], onDelete: SetNull)
    mealFoodItems MealFoodItem[]
    userMeals     UserMeal[]
    notes         String?
    images        Image[]
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
}

model MealFoodItem {
    id         String   @id @default(cuid())
    mealId     String
    meal       Meal     @relation(fields: [mealId], references: [id], onDelete: Cascade)
    foodItemId String
    foodItem   FoodItem @relation(fields: [foodItemId], references: [id], onDelete: Cascade)
    quantity   Int      @default(1) // in grams
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model UserMeal {
    id            String         @id @default(cuid())
    dateConsumed  DateTime       @default(now())
    notes         String?
    mealId        String?
    meal          Meal?          @relation(fields: [mealId], references: [id], onDelete: SetNull)
    ownerId       String
    owner         User           @relation(fields: [ownerId], references: [id], onDelete: Cascade)
    userMealItems UserMealItem[]
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
}

model UserMealItem {
    id         String   @id @default(cuid())
    userMealId String
    userMeal   UserMeal @relation(fields: [userMealId], references: [id], onDelete: Cascade)
    foodItemId String
    foodItem   FoodItem @relation(fields: [foodItemId], references: [id], onDelete: Cascade)
    quantity   Int      @default(1) // in grams
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}
